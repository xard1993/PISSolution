// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PISSolution.Data;

#nullable disable

namespace PISSolution.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PISSolution.Models.Contact", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ID = new Guid("d5b6b5de-c589-4702-8d6f-94b5a3a7c8c0"),
                            Email = "sarah.scerri@gmail.com",
                            FirstName = "Sarah",
                            LastName = "Scerri",
                            PhoneNumber = "79312888"
                        },
                        new
                        {
                            ID = new Guid("a9b2b5de-3382-4c9a-bf68-6a0a3c8a8d2f"),
                            Email = "emily.scerri@gmail.com",
                            FirstName = "Emily",
                            LastName = "Scerri",
                            PhoneNumber = "79312999"
                        },
                        new
                        {
                            ID = new Guid("fc3f5c7e-0981-4855-8f6d-85b8c7b2e3d2"),
                            Email = "michael.grech@gmail.com",
                            FirstName = "Michael",
                            LastName = "Grech",
                            PhoneNumber = "99312951"
                        },
                        new
                        {
                            ID = new Guid("8e64ff31-f402-448d-9740-26cb97df4e2d"),
                            Email = "Brandon.Grech@gmail.com",
                            FirstName = "Brandon",
                            LastName = "Grech",
                            PhoneNumber = "79312905"
                        });
                });

            modelBuilder.Entity("PISSolution.Models.Ownership", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AcquisitionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ContactID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveTill")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PropertyID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ContactID");

                    b.HasIndex("PropertyID");

                    b.ToTable("Ownerships");

                    b.HasData(
                        new
                        {
                            ID = new Guid("a364f17a-5b66-49ba-8036-29304edef650"),
                            AcquisitionPrice = 2600000.00m,
                            ContactID = new Guid("d5b6b5de-c589-4702-8d6f-94b5a3a7c8c0"),
                            EffectiveFrom = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyID = new Guid("e0a63457-6a49-49b9-b28b-82d6d0a8e9c0")
                        },
                        new
                        {
                            ID = new Guid("d6eba0d9-54f0-48e5-a7bb-f190a7e7d57d"),
                            AcquisitionPrice = 2000000.00m,
                            ContactID = new Guid("a9b2b5de-3382-4c9a-bf68-6a0a3c8a8d2f"),
                            EffectiveFrom = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTill = new DateTime(2021, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyID = new Guid("e0a63457-6a49-49b9-b28b-82d6d0a8e9c0")
                        },
                        new
                        {
                            ID = new Guid("8574239f-b26d-4f0f-8139-462c857cbe35"),
                            AcquisitionPrice = 1900000.00m,
                            ContactID = new Guid("fc3f5c7e-0981-4855-8f6d-85b8c7b2e3d2"),
                            EffectiveFrom = new DateTime(2019, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTill = new DateTime(2020, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyID = new Guid("e0a63457-6a49-49b9-b28b-82d6d0a8e9c0")
                        },
                        new
                        {
                            ID = new Guid("3993cfa6-69d4-461c-b777-19ddcfc02260"),
                            AcquisitionPrice = 880000.00m,
                            ContactID = new Guid("8e64ff31-f402-448d-9740-26cb97df4e2d"),
                            EffectiveFrom = new DateTime(2020, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyID = new Guid("67f89a33-b92f-4ef0-b1c4-f0a8a6858dc0")
                        },
                        new
                        {
                            ID = new Guid("bf4f5d11-8dcc-4d42-9cd4-c4b41ebf840c"),
                            AcquisitionPrice = 980000.00m,
                            ContactID = new Guid("fc3f5c7e-0981-4855-8f6d-85b8c7b2e3d2"),
                            EffectiveFrom = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PropertyID = new Guid("1a7c565e-5291-4a9f-8b19-7e2e2c1b9f0e")
                        });
                });

            modelBuilder.Entity("PISSolution.Models.PriceHistory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PropertyID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PropertyID");

                    b.ToTable("PriceHistories");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7c14dfac-7cf4-4ee5-a18a-efd2180e0693"),
                            Date = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2400000.00m,
                            PropertyID = new Guid("e0a63457-6a49-49b9-b28b-82d6d0a8e9c0")
                        },
                        new
                        {
                            ID = new Guid("d5a32d3a-d2d0-4ee0-aaf8-63c6ed0ef600"),
                            Date = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2300000.00m,
                            PropertyID = new Guid("e0a63457-6a49-49b9-b28b-82d6d0a8e9c0")
                        },
                        new
                        {
                            ID = new Guid("d009d871-5934-4eab-b16d-38dae7b64b9d"),
                            Date = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2100000.00m,
                            PropertyID = new Guid("e0a63457-6a49-49b9-b28b-82d6d0a8e9c0")
                        },
                        new
                        {
                            ID = new Guid("91bc57f6-a839-4b5b-9a01-e4f676a6e7bf"),
                            Date = new DateTime(2021, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 750000.00m,
                            PropertyID = new Guid("67f89a33-b92f-4ef0-b1c4-f0a8a6858dc0")
                        },
                        new
                        {
                            ID = new Guid("a0e93082-b311-409f-9047-0b8dfb1c0480"),
                            Date = new DateTime(2020, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 450000.00m,
                            PropertyID = new Guid("67f89a33-b92f-4ef0-b1c4-f0a8a6858dc0")
                        },
                        new
                        {
                            ID = new Guid("1d80b087-d8ce-49f0-b8ca-fe512cb1b537"),
                            Date = new DateTime(2019, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 350000.00m,
                            PropertyID = new Guid("67f89a33-b92f-4ef0-b1c4-f0a8a6858dc0")
                        },
                        new
                        {
                            ID = new Guid("ef9623e8-1649-4263-871a-4590c3e6873e"),
                            Date = new DateTime(2020, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 580000.00m,
                            PropertyID = new Guid("1a7c565e-5291-4a9f-8b19-7e2e2c1b9f0e")
                        });
                });

            modelBuilder.Entity("PISSolution.Models.Property", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            ID = new Guid("e0a63457-6a49-49b9-b28b-82d6d0a8e9c0"),
                            Address = "123 San Pawl Street",
                            DateOfRegistration = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2500000.00m,
                            PropertyName = "Luxury Villa"
                        },
                        new
                        {
                            ID = new Guid("67f89a33-b92f-4ef0-b1c4-f0a8a6858dc0"),
                            Address = "123 Triq il-Hadd",
                            DateOfRegistration = new DateTime(2020, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 800000.00m,
                            PropertyName = "Mercury Apartment"
                        },
                        new
                        {
                            ID = new Guid("1a7c565e-5291-4a9f-8b19-7e2e2c1b9f0e"),
                            Address = "99 Problems Street",
                            DateOfRegistration = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 600000.00m,
                            PropertyName = "Country House"
                        });
                });

            modelBuilder.Entity("PISSolution.Models.Ownership", b =>
                {
                    b.HasOne("PISSolution.Models.Contact", "Contact")
                        .WithMany("Ownerships")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PISSolution.Models.Property", "Property")
                        .WithMany("Ownerships")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("PISSolution.Models.PriceHistory", b =>
                {
                    b.HasOne("PISSolution.Models.Property", "Property")
                        .WithMany("PriceHistories")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("PISSolution.Models.Contact", b =>
                {
                    b.Navigation("Ownerships");
                });

            modelBuilder.Entity("PISSolution.Models.Property", b =>
                {
                    b.Navigation("Ownerships");

                    b.Navigation("PriceHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
